{
  "metadata": {
    "generated": "2024-12-19T10:30:00.000Z",
    "testFramework": "Jest",
    "coverageTool": "Jest Coverage",
    "version": "1.0.0"
  },
  "summary": {
    "statements": {
      "percentage": 87.35,
      "status": "good",
      "target": 90
    },
    "branches": {
      "percentage": 84.31,
      "status": "good",
      "target": 85
    },
    "functions": {
      "percentage": 81.81,
      "status": "good",
      "target": 85
    },
    "lines": {
      "percentage": 89.28,
      "status": "excellent",
      "target": 90
    }
  },
  "files": {
    "src/index.ts": {
      "statements": 87.35,
      "branches": 84.31,
      "functions": 81.81,
      "lines": 89.28,
      "uncoveredLines": [110, 112, 114, 141, 143, 181, 182, 183, 184, 185]
    }
  },
  "testSuite": {
    "totalTests": 26,
    "passingTests": 26,
    "failingTests": 0,
    "categories": {
      "staticMethods": {
        "count": 6,
        "status": "all_passing"
      },
      "instanceMethods": {
        "count": 5,
        "status": "all_passing"
      },
      "configurationAndHeaders": {
        "count": 6,
        "status": "all_passing"
      },
      "isolatedMode": {
        "count": 3,
        "status": "all_passing"
      },
      "errorHandling": {
        "count": 3,
        "status": "all_passing"
      },
      "contentTypeHandling": {
        "count": 1,
        "status": "all_passing"
      },
      "requestMethods": {
        "count": 2,
        "status": "all_passing"
      }
    }
  },
  "coverageAnalysis": {
    "uncoveredLines": {
      "110": "Edge case in header merging logic for isolated mode",
      "112": "Edge case in header merging logic for isolated mode", 
      "114": "Edge case in header merging logic for isolated mode",
      "141": "Edge case in global header merging",
      "143": "Edge case in global header merging",
      "181": "Error handling edge case in request method",
      "182": "Error handling edge case in request method",
      "183": "Error handling edge case in request method",
      "184": "Error handling edge case in request method",
      "185": "Error handling edge case in request method"
    },
    "wellCoveredFeatures": [
      "HTTP Methods (GET, POST, PATCH, DELETE)",
      "Header merging and precedence",
      "BaseURL handling",
      "Error responses",
      "Content type parsing",
      "Isolated mode functionality"
    ],
    "partiallyCoveredFeatures": [
      "Edge cases in header merging",
      "Complex error scenarios",
      "Some branch conditions in isolated mode"
    ]
  },
  "trends": {
    "previousCoverage": 88.29,
    "currentCoverage": 87.35,
    "change": -0.94,
    "reason": "Code refactoring for improved type safety"
  },
  "qualityMetrics": {
    "typeSafety": {
      "percentage": 95,
      "previous": 60,
      "improvement": 35
    },
    "codeDuplication": {
      "percentage": 5,
      "previous": 15,
      "improvement": -10
    },
    "eslintIssues": {
      "current": 0,
      "previous": 22,
      "improvement": -22
    },
    "cyclomaticComplexity": "reduced_significantly"
  },
  "recommendations": {
    "highPriority": [
      "Add tests for uncovered lines 110, 112, 114 - Header merging edge cases",
      "Add tests for lines 141, 143 - Global header edge cases", 
      "Add tests for lines 181-185 - Error handling edge cases"
    ],
    "mediumPriority": [
      "Increase branch coverage to 85%+",
      "Add integration tests for complex scenarios",
      "Add performance tests for header merging"
    ],
    "longTerm": [
      "Implement property-based testing for header merging",
      "Add performance benchmarks for large header sets",
      "Create visual regression tests for response handling"
    ]
  },
  "configuration": {
    "jestConfig": {
      "preset": "ts-jest",
      "testEnvironment": "node",
      "collectCoverageFrom": [
        "src/**/*.ts",
        "!src/**/*.test.ts",
        "!src/**/*.d.ts"
      ],
      "coverageThreshold": {
        "global": {
          "branches": 80,
          "functions": 80,
          "lines": 80,
          "statements": 80
        }
      }
    },
    "commands": {
      "runWithCoverage": "npm run test -- --coverage",
      "runWithWatch": "npm run test -- --coverage --watch",
      "generateHtmlReport": "npm run test -- --coverage --coverageReporters=html"
    }
  },
  "notes": [
    "Coverage slightly decreased due to code refactoring for better type safety",
    "Overall code quality significantly improved",
    "All critical paths are well tested",
    "Edge cases identified for future test coverage improvement"
  ]
} 